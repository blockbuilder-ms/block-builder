"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkblock_builder_editor"] = self["webpackChunkblock_builder_editor"] || []).push([["src_actions_media_module_js"],{

/***/ "./src/actions/media/module.js":
/*!*************************************!*\
  !*** ./src/actions/media/module.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nclass Media {\r\n  constructor(link) {\r\n    const self = this;\r\n    self.link = link;\r\n    self.container = link.parentNode.parentNode.parentNode;\r\n    let action = link.getAttribute(\"x-subaction\");\r\n\r\n    if (self.link && self.link.hasAttribute(\"x-options\")) {\r\n      self.options = link.getAttribute(\"x-options\");\r\n\r\n      if (self.options) {\r\n        self.options = JSON.parse(self.options);\r\n      }\r\n    }\r\n\r\n    switch (action) {\r\n      case \"toggle\":\r\n        link.addEventListener(\"click\", function (e) {\r\n          self._toggle(e);\r\n        });\r\n        break;\r\n\r\n      case \"clear\":\r\n        link.addEventListener(\"click\", function (e) {\r\n          self._clear(e);\r\n        });\r\n        break;\r\n\r\n      default:\r\n        console.log(\"Media action was not found\");\r\n    }\r\n  }\r\n\r\n  async _toggle(e) {\r\n    const self = this;\r\n    e.preventDefault();\r\n    console.log(self.options);\r\n    self.controller = await window.getAppLoader().blockControl.get({\r\n      \"data-id\": self.options.id,\r\n    });\r\n\r\n    if (!self.controller) {\r\n      console.error(\"No controller found\");\r\n      return;\r\n    }\r\n\r\n    if (self.frame) {\r\n      self.frame.open();\r\n      return;\r\n    }\r\n\r\n    // Sets the media manager's title and button text\r\n    self.frame = wp.media.frames.bb_image_frame = wp.media({\r\n      title: self.options.title ? self.options.title : \"Media\",\r\n      button: {\r\n        text: self.options.buttonText ? self.options.buttonText : \"Choose.\",\r\n      },\r\n    });\r\n\r\n    self.frame.on(\"select\", function () {\r\n      // Grabs the attachment selection and creates a JSON representation of the model.\r\n      var media_attachment = self.frame\r\n        .state()\r\n        .get(\"selection\")\r\n        .first()\r\n        .toJSON();\r\n\r\n      var media_id = media_attachment.id;\r\n      var media_thumbnail = media_attachment.sizes.thumbnail.url;\r\n\r\n      if (self.options.name) {\r\n        let element = document.querySelector(\r\n          '[name=\"' + self.options.name + '\"]'\r\n        );\r\n\r\n        if (element) {\r\n          element.value = media_thumbnail;\r\n\r\n          document.querySelector(\r\n            '[name=\"' + self.options.name + '-id\"]'\r\n          ).value = media_id;\r\n\r\n          window.getAppLoader().event.emit(\"bb-control-hidden_change-before\", {\r\n            node: element,\r\n            changeEvent: false,\r\n            controller: self.controller,\r\n          });\r\n        }\r\n      }\r\n\r\n      self.container\r\n        .querySelector('[x-if=\"src\"] img')\r\n        .setAttribute(\"src\", media_thumbnail);\r\n      self.container\r\n        .querySelector('[x-if=\"src\"] img')\r\n        .classList.remove(\"hidden\");\r\n      self.container.querySelector('[x-if=\"src\"]').classList.remove(\"hidden\");\r\n      self.container.querySelector('[x-if=\"!src\"]').classList.add(\"hidden\");\r\n    });\r\n\r\n    self.frame.open();\r\n  }\r\n\r\n  _clear(e) {\r\n    e.preventDefault();\r\n    self.container.querySelector('[x-if=\"src\"] img').setAttribute(\"src\", \"\");\r\n    self.container.querySelector('[x-if=\"src\"] img').classList.add(\"hidden\");\r\n    self.container.querySelector('[x-if=\"src\"]').classList.add(\"hidden\");\r\n    self.container.querySelector('[x-if=\"!src\"]').classList.remove(\"hidden\");\r\n  }\r\n}\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Media);\r\n\n\n//# sourceURL=webpack://block-builder-editor/./src/actions/media/module.js?");

/***/ })

}]);